# Docker Compose file for rennan-tech infrastructure
services:
  rennan-tech:
    image: ${RENNAN_TECH_ECR_URI:-public.ecr.aws/q9c0i8b3/rennan-tech}:latest
    container_name: rennan-tech
    restart: unless-stopped
    expose:
      - "80"
    networks: [caddy]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  engineer-lab:
    image: ${ENGINEER_LAB_ECR_URI:-public.ecr.aws/q9c0i8b3/engineer-lab}:latest
    container_name: engineer-lab
    restart: unless-stopped
    expose:
      - "80"
    networks: [caddy]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks: [caddy]
    depends_on:
      rennan-tech:
        condition: service_healthy
      engineer-lab:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  caddy:

volumes:
  caddy_data:
  caddy_config:
