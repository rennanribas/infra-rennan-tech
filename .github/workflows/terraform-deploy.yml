name: Deploy Infrastructure

on:
  push:
    branches: [main]
    paths:
      - 'main.tf'
      - 'variables.tf'
      - 'versions.tf'
      - 'backend.tf'
      - 'docker-compose.yml'
      - 'Caddyfile'
      - '.github/workflows/terraform-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'main.tf'
      - 'variables.tf'
      - 'versions.tf'
      - 'backend.tf'
      - 'docker-compose.yml'
      - 'Caddyfile'
      - '.github/workflows/terraform-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '~1.5'

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-east-1
          role-skip-session-tagging: true

      - id: fmt
        run: terraform fmt -check || true

      - id: init
        run: terraform init

      - id: validate
        run: terraform validate

      - id: plan
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt
          echo "plan_output<<EOF" >> $GITHUB_OUTPUT
          cat plan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `
            **Terraform results**
            fmt:      ${{ steps.fmt.outcome }}
            init:     ${{ steps.init.outcome }}
            validate: ${{ steps.validate.outcome }}
            plan:     ${{ steps.plan.outcome }}

            <details><summary>Show plan</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.plan_output }}
            \`\`\`

            </details>`;
            github.rest.issues.createComment({ ...context.issue, body });

      - name: Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
